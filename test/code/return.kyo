// NAME TestReturnSimple1
// ERR 0
// RET 0

fn main() i32 {
    return 0;
}
// SEP

// NAME TestReturnSimple2
// ERR 0
// RET 1

fn main() i32 {
    return 1;
}
// SEP

// NAME TestMissingReturn
// ERR 1
// RET 0

fn main() i32 {
}
// SEP

// NAME TestReturnNegative
// ERR 0
// RET -1

fn main() i32 {
    return -1;
}
// SEP

// NAME ValidReturn
// ERR 0
// RET 42

fn main() i8 {
    var x: i8 = 41;
    var y: i8 = x + 1;
    return y;
}
// SEP

// NAME MissingReturnStatement
// ERR 1
// RET 0

fn main() i8 {
    var x: i8 = 10;
    var y: i8 = x + 5;
}
// SEP

// NAME BooleanReturnValid
// ERR 0
// RET 1

fn main() bool {
    var x: bool = true;
    return x;
}
// SEP

// NAME BooleanReturnInvalidType
// ERR 1
// RET 0

fn main() bool {
    var x: i8 = 10;
    return x;
}
// SEP

// NAME ValidReturnAdd
// ERR 0
// RET 5

fn main() i8 {
    var x: i8 = 2;
    var y: i8 = 3;
    var z: i8 = x + y;
    return z;
}
// SEP

// NAME TrivialValidExtension
// ERR 0
// RET 42

fn main() i16 {
    var x: i8 = 41;
    var y: i8 = x + 1;
    return y;
}
// SEP

// NAME TrivialValidTruncation
// ERR 0
// RET 10

fn main() i8 {
    var x: i32 = 10;
    return x;
}
// SEP

// NAME NoVariables
// ERR 0
// RET 7

fn main() i8 {
    return 7;
}
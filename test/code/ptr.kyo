// NAME SimplePointerTest
// ERR 0
// RET 2

fn main() i32 {
    var x: i32 = 1;
    var y: i32* = &x;
    *y = 2;
    return x;
}

// NAME DoublePointerTest
// ERR 0
// RET 3

fn main() i32 {
    var x: i32 = 1;
    var y: i32* = &x;
    var z: i32** = &y;
    *y = 2;
    **z = 3;
    return x;
}

// NAME TriplePointerTest
// ERR 0
// RET 4

fn main() i32 {
    var x: i32 = 1;
    var y: i32* = &x;
    var z: i32** = &y;
    var w: i32*** = &z;
    *y = 2;
    **z = 3;
    ***w = 4;
    return x;
}

// NAME WrongNumberOfDereferences
// ERR 1
// RET 0

fn main() i32 {
    var x: i32 = 1;
    var y: i32* = &x;
    var z: i32** = &y;
    var w: i32*** = &z;
    **w = 4;
    return x;
}

// NAME WrongNumberOfDereferences2
// ERR 1
// RET 0

fn main() i32 {
    var x: i32 = 1;
    var y: i32* = &x;
    var z: i32** = &y;
    var w: i32*** = &z;
    ****w = 4;
    return x;
}

// NAME DereferencePointerToPointer
// ERR 0
// RET 2

fn main() i32 {
    var x: i32 = 1;
    var y: i32 = 1;
    var k: i32* = &x;
    var z: i32** = &k;
    *z = &y;
    *k = 2;
    return y;
}

// NAME PointerFunctionArgument
// ERR 0
// RET 18

fn f(x: i32*, y: i32*) void {
    *x = 12;
    *y = 6;
}

fn main() i32 {
    var x: i32 = 0;
    var y: i32 = 0;
    f(&x, &y);
    return x + y;
}

// NAME WrongFunctionArgument
// ERR 1
// RET 0

fn f(x: i32, y: i32) void {
    x = 12;
    y = 6;
}

fn main() i32 {
    var x: i32 = 0;
    var y: i32 = 0;
    f(&x, y);
    return x + y;
}

// NAME ReturnPointer
// ERR 0
// RET 1

fn f(x: i32*) i32* {
    *x = 12;
    return x;
}

fn main() i32 {
    var x: i32 = 0;
    var z: i32* = f(&x);
    *z = 1;
    return x;
}

// NAME EmptyForLoop
// ERR 0
// RET 1

fn main() i32 {
    for (;false;) { }
    return 1;
}


// NAME Fibonacci
// ERR 0
// RET 89

fn main() i32 {
    var a = 0;
    var b = 1;
    var c = 0;
    for (var i = 0; i < 10; i = i + 1) {
        c = a + b;
        a = b;
        b = c;
    }
    return c;
}


// NAME Factorial
// ERR 0
// RET 120

fn main() i32 {
    var x = 1;
    for (var i = 1; i < 6; i = i + 1) {
        x = x * i;
    }
    return x;
}


// NAME ForLoopWithIf
// ERR 0
// RET 6

fn main() i32 {
    for (var i = 0; i < 100; i = i + 1) { 
        if (i == 3) {
            return 1 + 2 + 3;
        }
    }
    return -1;
}


// NAME ForLoopWithIfElse
// ERR 0
// RET 0

fn main() i32 {
    for (var i = 0; i < 100; i = i + 1) { 
        if (i == 3) {
            return 1 + 2 + 3;
        } else {
            return i;
        }
    }
    return -1;
}


// NAME ForLoopWithEmptyIfElseIf
// ERR 0
// RET -1

fn main() i32 {
    for (var i = 0; i < 100; i = i + 1) { 
        if (i == 3) {
            return 1 + 2 + 3;
        } else if (i == 4) {
        } else {
            return -1;
        }
    }
    return 0;
}


// NAME ForLoopWithNoBody
// ERR 0
// RET 0

fn main() i32 {
    for (var i = 0; i < 10; i = i + 1) { }
    return 0;
}


// NAME ForLoopWithNestedLoop
// ERR 0
// RET 25

fn main() i32 {
    var sum = 0;
    for (var i = 0; i < 5; i = i + 1) {
        for (var j = 0; j < 5; j = j + 1) {
            sum = sum + 1;
        }
    }
    return sum;
}



// NAME ForLoopWithLargeIteration
// ERR 0
// RET 20

fn main() i32 {
    var sum = 0;
    for (var i = 0; i <= 1000; i = i + 1) {
        sum = sum + i;
    }
    return sum;
}


// NAME ForLoopWithIncrementOpUpdate
// ERR 0
// RET 55

fn main() i32 {
    var sum = 0;
    for (var i = 0; i <= 10; ++i) {
        sum = sum + i;
    }
    return sum;
}
